[flake8]
max-line-length = 120
max-complexity = 18
ignore = E203, E266, W503
docstring-convention = {{ cookiecutter.docstrings_style }}
per-file-ignores = __init__.py:F401
exclude = .git,
    __pycache__,
    setup.py,
    build,
    dist,
    docs,
    releases,
    .venv,
    .tox,
    .mypy_cache,
    .pytest_cache,
    .vscode,
    .github,
    # By default test codes will be linted.
    # tests

{%- if cookiecutter.use_mypy == 'y' %}

[mypy]
ignore_missing_imports = True
{%- endif %}


[darglint]
strictness=full
docstring_style=google
message_template={path}:{line} @{obj} {msg_id}: {msg}


[tool:pytest]
testpaths = tests
addopts =
    --cov-report=term-missing
    --cov={{ cookiecutter.pkg_name }}
    --cov-append

[coverage:run]
# uncomment the following to omit files during running
#omit =
#    path/folder/file
#    path/folder/*
branch = True

[coverage:report]
show_missing = True
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main

[coverage:html]
directory = coverage_html
show_contexts = True


[tox:tox]
isolated_build = true
envlist = py310, py39, format, lint, build

[gh-actions]
python =
    3.9: py39, format, lint, build

[testenv]
allowlist_externals =
    poetry
#    pytest
extras =
    test
passenv = *
setenv =
    py{py39,310}: COVERAGE_FILE = .coverage_{envname}
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
commands =
    poetry install -v
    poetry run pytest {posargs:-vv} --cov-report=html:html_coverage_{envname}
    # same exec: pytest --cov={{ cookiecutter.pkg_name }} --cov-branch --cov-report=xml --cov-report=term-missing tests
    poetry run bandit -r {{ cookiecutter.pkg_name }}

[testenv:format]
allowlist_externals =
    isort
    black
extras =
    test
commands =
    isort {{ cookiecutter.pkg_name }}
    black {{ cookiecutter.pkg_name }} tests

[testenv:lint]
allowlist_externals =
    flake8
    {%- if cookiecutter.use_mypy == 'y' %}
    mypy
    {%- endif %}
    poetry
extras =
    test
commands =
    flake8 {{ cookiecutter.pkg_name }} tests
    {%- if cookiecutter.use_mypy == 'y' %}
    mypy {{ cookiecutter.pkg_name }} tests
    {%- endif %}
    poetry run yamllint -f colored {{ cookiecutter.pkg_name }}
    poetry run codespell {{ cookiecutter.pkg_name }} docs/source
    poetry run pylint {{ cookiecutter.pkg_name }}
    poetry run darglint -v 2 {{ cookiecutter.pkg_name }}

[testenv:build]
allowlist_externals =
    poetry
    {%- if 'mkdocs' in cookiecutter.doc_generator|lower  %}
    mkdocs
    {%- else %}
    sphinx
    {%- endif %}
    twine
extras =
    doc
    dev
commands =
    poetry build
    {%- if 'mkdocs' in cookiecutter.doc_generator|lower %}
    mkdocs build
    {%- else %}
    poetry run sphinx-build -b html docs/source/ docs/build/html
    {%- endif %}
    twine check dist/*
